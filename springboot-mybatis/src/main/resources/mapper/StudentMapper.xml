<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.springbootmybatis.mapper.StudentMapper">

	<resultMap id="BaseResultMap" type="com.qf.springbootmybatis.entity.Student">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="stunumber" jdbcType="INTEGER" property="stunumber" />
	</resultMap>
	<sql id="Base_Column_List">
    id, username, password, stunumber
  </sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_student
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
	<insert id="insert" parameterType="com.qf.springbootmybatis.entity.Student">
    insert into t_student (id, username, password,
      stunumber)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{stunumber,jdbcType=INTEGER})
  </insert>
	<insert id="insertSelective" parameterType="com.qf.springbootmybatis.entity.Student">
		insert into t_student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="stunumber != null">
				stunumber,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="stunumber != null">
				#{stunumber,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.qf.springbootmybatis.entity.Student">
		update t_student
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="stunumber != null">
				stunumber = #{stunumber,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.qf.springbootmybatis.entity.Student">
    update t_student
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      stunumber = #{stunumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>



	<!-- 通过用户对象查询用户  -->
	<select id="getStudent" resultType="com.qf.springbootmybatis.entity.Student" parameterType="com.qf.springbootmybatis.entity.Student">
		select * from t_student where username=#{username} and password=#{password}
	</select>
	
	
	<!-- 添加 -->
	<insert id="add" parameterType="com.qf.springbootmybatis.entity.Student">
		insert into t_student(username,password,stunumber) values(#{username},#{password},#{stunumber})
	</insert>
	
	<!-- 获取集合数据 -->
	<select id="getList" resultType="com.qf.springbootmybatis.entity.Student">
		select * from t_student
	</select>
	
	<!-- 通过id获取对象数据 -->
	<select id="getById" parameterType="int" resultType="com.qf.springbootmybatis.entity.Student">
		select * from t_student where id=#{id}
	</select>
	
	<!-- 更新用户数据 -->
	<update id="update" parameterType="com.qf.springbootmybatis.entity.Student" >
	    update t_student set username=#{username},password=#{password},stunumber=#{stunumber} where id=#{id}
	</update>
	
	<!-- 删除用户数据 -->
	<delete id="deleteById" parameterType="int">
	    delete from t_student where id=#{id}
	</delete>
	
	
</mapper>